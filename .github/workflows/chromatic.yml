name: Chromatic Visual Testing

on:
    push:
        branches: [main, dev]
    pull_request:
        branches: [main, dev]

permissions:
    issues: write # Required for Chromatic to comment on PRs
    pull-requests: write # Required for Chromatic to comment on PRs
jobs:
    chromatic-deployment:
        name: Deploy Storybook to Chromatic
        runs-on: ubuntu-latest
        steps:
            # Checkout the repository
            - name: Checkout repository
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0 # Required for Chromatic to retrieve git history

            # Setup Node.js
            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '22'

            # Install Bun
            - name: Install Bun
              run: npm install -g bun

            # Install dependencies
            - name: Install dependencies
              run: bun install

            # Build Storybook
            - name: Build Storybook
              run: bun run build-storybook

            # Publish to Chromatic
            - name: Publish to Chromatic
              id: chromatic
              uses: chromaui/action@v1
              with:
                  projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
                  storybookBuildDir: storybook-static
                  exitZeroOnChanges: true # Optional: Exit with success status even if there are UI changes
                  autoAcceptChanges: ${{ github.ref == 'refs/heads/main' }} # Auto-accept changes on main branch

            # Update PR comment with Chromatic results
            - name: Update PR comment
              if: github.event_name == 'pull_request' && steps.chromatic.outputs.buildUrl
              uses: actions/github-script@v6
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  script: |
                      const { issue: { number: issue_number }, repo: { owner, repo } } = context;
                      const buildUrl = '${{ steps.chromatic.outputs.buildUrl }}';
                      const storybookUrl = '${{ steps.chromatic.outputs.storybookUrl }}';

                      const message = `## 🎨 Chromatic Visual Testing Results
                      <!-- chromatic-comment -->

                      | Resource | URL |
                      | --- | --- |
                      | 🔍 Build Results | [Chromatic Build](${buildUrl}) |
                      | 📚 Storybook | [View Storybook](${storybookUrl}) |

                      Check the visual changes and approve or request changes as needed.`;

                      // Get existing comments
                      const comments = await github.rest.issues.listComments({
                        issue_number,
                        owner,
                        repo,
                      });

                      // Find existing Chromatic comment
                      const existingComment = comments.data.find(comment => 
                        comment.user.type === 'Bot' && 
                        comment.body.includes('<!-- chromatic-comment -->')
                      );

                      if (existingComment) {
                        // Update existing comment
                        await github.rest.issues.updateComment({
                          comment_id: existingComment.id,
                          owner,
                          repo,
                          body: message
                        });
                      } else {
                        // Create new comment
                        await github.rest.issues.createComment({
                          issue_number,
                          owner,
                          repo,
                          body: message
                        });
                      }
